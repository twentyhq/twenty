// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with an invalid default value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with an unknown default value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with comma in option label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Label must not contain a comma",
    },
    "message": "Label must not contain a comma",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with duplicated option ids 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option id",
    },
    "message": "Duplicated option id",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with duplicated option positions 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option position",
    },
    "message": "Duplicated option position",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with duplicated option values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option value",
    },
    "message": "Duplicated option value",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with duplicated trimmed option values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option value",
    },
    "message": "Duplicated option value",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty multi-select default values array 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "If defined default value must contain at least one value",
    },
    "message": "If defined default value must contain at least one value",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty string defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty string id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty string label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label "" is beneath 1 character",
    },
    "message": "Option label "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with empty string value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value "" is beneath 1 character",
    },
    "message": "Option value "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with invalid multi-select default value format 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value should be as quoted string",
    },
    "message": "Default value should be as quoted string",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with invalid option id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with invalid option value format 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Value must be in UPPER_CASE and follow snake_case "Option 1 and some other things, /"",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "Option 1 and some other things, /"",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with non stringified array default value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with not a string defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with not a string id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with not a string label 1`] = `
[
  {
    "extensions": {
      "code": "INTERNAL_SERVER_ERROR",
      "exceptionEventId": "mocked-exception-id",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "label.includes is not a function",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with not a string value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Value must be in UPPER_CASE and follow snake_case "22222"",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "22222"",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with null id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is required",
    },
    "message": "Option id is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with null label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label is required",
    },
    "message": "Option label is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with null options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with null value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value is required",
    },
    "message": "Option value is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with only white spaces defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with only white spaces id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with only white spaces label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label "" is beneath 1 character",
    },
    "message": "Option label "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with only white spaces value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value "" is beneath 1 character",
    },
    "message": "Option value "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with too long defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be an array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with too long id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with too long label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label exceeds 63 characters",
    },
    "message": "Option label exceeds 63 characters",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with too long value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value exceeds 63 characters",
    },
    "message": "Option value exceeds 63 characters",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with undefined option label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label is required",
    },
    "message": "Option label is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with undefined option value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value is required",
    },
    "message": "Option value is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with undefined options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata MULTI_SELECT tests suite Create should fail with unknown multi-select default values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value "'UNKNOWN_OPTION'" must be one of the option values",
    },
    "message": "Default value "'UNKNOWN_OPTION'" must be one of the option values",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with an invalid default value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value should be as quoted string",
    },
    "message": "Default value should be as quoted string",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with an unknown default value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value "'OPTION_424242'" must be one of the option values",
    },
    "message": "Default value "'OPTION_424242'" must be one of the option values",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with comma in option label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Label must not contain a comma",
    },
    "message": "Label must not contain a comma",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with duplicated option ids 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option id",
    },
    "message": "Duplicated option id",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with duplicated option positions 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option position",
    },
    "message": "Duplicated option position",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with duplicated option values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option value",
    },
    "message": "Duplicated option value",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with duplicated trimmed option values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Duplicated option value",
    },
    "message": "Duplicated option value",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with empty options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with empty string defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value should be as quoted string",
    },
    "message": "Default value should be as quoted string",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with empty string id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with empty string label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label "" is beneath 1 character",
    },
    "message": "Option label "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with empty string value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value "" is beneath 1 character",
    },
    "message": "Option value "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with invalid option id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with invalid option value format 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Value must be in UPPER_CASE and follow snake_case "Option 1 and some other things, /"",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "Option 1 and some other things, /"",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with not a string defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Default value for multi-select must be a stringified array",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with not a string id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with not a string label 1`] = `
[
  {
    "extensions": {
      "code": "INTERNAL_SERVER_ERROR",
      "exceptionEventId": "mocked-exception-id",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "label.includes is not a function",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with not a string value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Value must be in UPPER_CASE and follow snake_case "22222"",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "22222"",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with null id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is required",
    },
    "message": "Option id is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with null label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label is required",
    },
    "message": "Option label is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with null options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with null value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value is required",
    },
    "message": "Option value is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with only white spaces defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value should be as quoted string",
    },
    "message": "Default value should be as quoted string",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with only white spaces id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with only white spaces label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label "" is beneath 1 character",
    },
    "message": "Option label "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with only white spaces value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value "" is beneath 1 character",
    },
    "message": "Option value "" is beneath 1 character",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with too long defaultValue 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Default value should be as quoted string",
    },
    "message": "Default value should be as quoted string",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with too long id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option id is invalid",
    },
    "message": "Option id is invalid",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with too long label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label exceeds 63 characters",
    },
    "message": "Option label exceeds 63 characters",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with too long value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value exceeds 63 characters",
    },
    "message": "Option value exceeds 63 characters",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with undefined option label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option label is required",
    },
    "message": "Option label is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with undefined option value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "Option value is required",
    },
    "message": "Option value is required",
    "name": "UserInputError",
  },
]
`;

exports[`Create field metadata SELECT tests suite Create should fail with undefined options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
      "subCode": "INVALID_FIELD_INPUT",
      "userFriendlyMessage": "An error occurred.",
    },
    "message": "Options are required for enum fields",
    "name": "UserInputError",
  },
]
`;