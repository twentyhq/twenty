// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`update-one-field-metadata-related-record MULTI_SELECT should delete related view filter if all select field options got deleted 1`] = `
[
  {
    "extensions": {
      "code": "NOT_FOUND",
    },
    "message": "Record not found",
  },
]
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should handle adding new options while maintaining existing view filter 1`] = `
{
  "displayValue": "2 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should handle no changes update of options while maintaining existing view filter values 1`] = `
{
  "displayValue": "10 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1","OPTION_2","OPTION_3","OPTION_4","OPTION_5","OPTION_6","OPTION_7","OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should handle partial deletion of selected options in view filter 1`] = `
{
  "displayValue": "6 options",
  "id": Any<String>,
  "value": "["OPTION_4","OPTION_5","OPTION_6","OPTION_7","OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should handle reordering of options while maintaining view filter values 1`] = `
{
  "displayValue": "2 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should throw error if view filter value is not a stringified JSON array 1`] = `
[
  {
    "extensions": {
      "code": "INTERNAL_SERVER_ERROR",
      "exceptionEventId": "mocked-exception-id",
    },
    "message": "Unexpected invalid view filter value for filter 20202020-e3b5-4fa7-85aa-9b1950fc7bf5",
  },
]
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should update display value with options label if less than 3 options are selected 1`] = `
{
  "displayValue": "Option 8, Option 9",
  "id": Any<String>,
  "value": "["OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should update related multi selected options view filter 1`] = `
{
  "displayValue": "10 options",
  "id": Any<String>,
  "value": "["OPTION_0_UPDATED","OPTION_1","OPTION_2_UPDATED","OPTION_3","OPTION_4_UPDATED","OPTION_5","OPTION_6_UPDATED","OPTION_7","OPTION_8_UPDATED","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should update related solo selected option view filter 1`] = `
{
  "displayValue": "Option 5 updated",
  "id": Any<String>,
  "value": "["OPTION_5_UPDATED"]",
}
`;

exports[`update-one-field-metadata-related-record MULTI_SELECT should update the display value on an option label change only 1`] = `
{
  "displayValue": "Option 0 updated, Option 1 updated, Option 2 updated",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1","OPTION_2"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should delete related view filter if all select field options got deleted 1`] = `
[
  {
    "extensions": {
      "code": "NOT_FOUND",
    },
    "message": "Record not found",
  },
]
`;

exports[`update-one-field-metadata-related-record SELECT should handle adding new options while maintaining existing view filter 1`] = `
{
  "displayValue": "2 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should handle no changes update of options while maintaining existing view filter values 1`] = `
{
  "displayValue": "10 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1","OPTION_2","OPTION_3","OPTION_4","OPTION_5","OPTION_6","OPTION_7","OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should handle partial deletion of selected options in view filter 1`] = `
{
  "displayValue": "6 options",
  "id": Any<String>,
  "value": "["OPTION_4","OPTION_5","OPTION_6","OPTION_7","OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should handle reordering of options while maintaining view filter values 1`] = `
{
  "displayValue": "2 options",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should throw error if view filter value is not a stringified JSON array 1`] = `
[
  {
    "extensions": {
      "code": "INTERNAL_SERVER_ERROR",
      "exceptionEventId": "mocked-exception-id",
    },
    "message": "Unexpected invalid view filter value for filter 20202020-e3b5-4fa7-85aa-9b1950fc7bf5",
  },
]
`;

exports[`update-one-field-metadata-related-record SELECT should update display value with options label if less than 3 options are selected 1`] = `
{
  "displayValue": "Option 8, Option 9",
  "id": Any<String>,
  "value": "["OPTION_8","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should update related multi selected options view filter 1`] = `
{
  "displayValue": "10 options",
  "id": Any<String>,
  "value": "["OPTION_0_UPDATED","OPTION_1","OPTION_2_UPDATED","OPTION_3","OPTION_4_UPDATED","OPTION_5","OPTION_6_UPDATED","OPTION_7","OPTION_8_UPDATED","OPTION_9"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should update related solo selected option view filter 1`] = `
{
  "displayValue": "Option 5 updated",
  "id": Any<String>,
  "value": "["OPTION_5_UPDATED"]",
}
`;

exports[`update-one-field-metadata-related-record SELECT should update the display value on an option label change only 1`] = `
{
  "displayValue": "Option 0 updated, Option 1 updated, Option 2 updated",
  "id": Any<String>,
  "value": "["OPTION_0","OPTION_1","OPTION_2"]",
}
`;
